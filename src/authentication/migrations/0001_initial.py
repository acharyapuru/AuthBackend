# Generated by Django 5.0.6 on 2024-09-17 05:43

import authentication.manager
import authentication.utils
import django.core.validators
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='PseudoUser',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('email', models.EmailField(max_length=255, null=True, unique=True)),
                ('country_code', models.CharField(blank=True, max_length=5, null=True)),
                ('phone', models.CharField(max_length=15, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='Enter a valid 10-digit Nepalese phone number starting with 98, 97, or 96', regex='^(98|97|96)\\d{8}$')])),
                ('otp', models.CharField(max_length=6, validators=[authentication.utils.otp_validator])),
                ('otp_created_at', models.DateTimeField(auto_now_add=True)),
                ('last_otp_resent_at', models.DateTimeField(null=True)),
                ('last_otp_retry_at', models.DateTimeField(null=True)),
                ('otp_try', models.PositiveSmallIntegerField(default=0)),
                ('otp_sent', models.PositiveIntegerField(default=0)),
                ('is_email_verified', models.BooleanField(default=False)),
                ('is_phone_verified', models.BooleanField(default=False)),
                ('otp_expiration_time', models.DateTimeField(null=True)),
            ],
            options={
                'verbose_name': 'Pseudo User',
                'verbose_name_plural': 'Pseudo Users',
                'indexes': [models.Index(fields=['phone'], name='authenticat_phone_00d131_idx'), models.Index(fields=['email'], name='authenticat_email_f21f8a_idx')],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('country_code', models.CharField(blank=True, max_length=5, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='Enter a valid 10-digit Nepalese phone number starting with 98, 97, or 96', regex='^(98|97|96)\\d{8}$')])),
                ('email', models.EmailField(blank=True, max_length=255, null=True, unique=True)),
                ('is_email_verified', models.BooleanField(default=False)),
                ('is_phone_verified', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'indexes': [models.Index(fields=['phone'], name='authenticat_phone_1cacd0_idx'), models.Index(fields=['email'], name='authenticat_email_d74434_idx')],
            },
            managers=[
                ('objects', authentication.manager.CustomUserManager()),
            ],
        ),
        migrations.AddConstraint(
            model_name='user',
            constraint=models.CheckConstraint(check=models.Q(('email__isnull', True), ('is_email_verified', True), _negated=True), name='email_verified_requires_email', violation_error_message='Email verification requires email'),
        ),
        migrations.AddConstraint(
            model_name='user',
            constraint=models.CheckConstraint(check=models.Q(('is_phone_verified', True), ('phone__isnull', True), _negated=True), name='phone_verified_requires_phone', violation_error_message='Phone verification requires phone'),
        ),
    ]
